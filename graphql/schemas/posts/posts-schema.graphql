type Query {
  recentPost: [Post]!
  allPost: [Post]!
  post(id: Int): [Post]!
  friendlinks: [Links]!
  messageStack: [Message]!
}

type Mutation {
  createMessage(message: String!): Message!
  createNewPost(post: UploadPost!): UploadMessage!
}

type UploadMessage{
  message: String!
}

type Message {
  id: ID!
  message: String
  create_at: String
  update_at: String
}

input UploadPost {
  title: String
  author: String
  categories: String
  tags: String
  content: String
  descr: String
  image: String
}

type Post {
  id: Int,
  title: String,
  author: String,
  categories: String,
  tags: String,
  content: String
  date: String,
  descr: String,
  link: String,
  image: String,
  create_at: String,
  update_at: String
}

type Links {
  id: Int
  nickname: String
  email: String
  website_title: String
  website_link: String
  website_cover: String
  website_desr: String
  create_at: String
  update_at: String
  theme_color: String
}